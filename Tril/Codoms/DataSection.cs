using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Tril.Delegates;

namespace Tril.Codoms
{
    /// <summary>
    /// Represents a data section block.
    /// Represents a block that marks the beginning and end of the code section of a method.
    /// Useful in languages that declare all local variables in a data section before the actual code section,
    /// like pascal and oberon.
    /// E.g. 
    /// program HelloWorld(output); 
    /// var 
    /// Number, I, X : Integer; 
    /// begin 
    /// WriteLn('Hello world')
    /// end;
    /// </summary>
    [Serializable]
    public sealed class DataSection : Block
    {
        /// <summary>
        /// gets the C# representation of this code
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            return ToString(null);
        }
        /// <summary>
        /// Returns the string representation of this code, as generated by the specified translator.
        /// </summary>
        /// <param name="translator"></param>
        /// <returns></returns>
        public override string ToString(CodomTranslator translator)
        {
            string trans = Codom.ToString(translator, this);
            if (trans != null)
                return trans;
            else
            {
                string codeString = "";
                foreach (Codom ifBodyCode in this)
                {
                    codeString += ifBodyCode.ToString(translator) + "\r\n";
                }
                if (codeString.EndsWith("\r\n"))
                    codeString = codeString.Substring(0, codeString.Length - 2); //ignore the last 2 new line chars '\r' and '\n'
                return codeString;
            }
        }
    }
}
